@isTest
private class TestClassVFBill
{
    static testMethod void validateTestClassVFBill()
    {
   		Invoice_Statement__c obj_invoive = new Invoice_Statement__c(City__c='jaipur',Company_Name__c='infosys',Email_Address__c='test@gmail.com',
   		Name__c='Bhushan',Phone__c='9898899090',Street_Name__c='NY Street'); 
   		system.debug('value in total before inserting any line item'+obj_invoive.Total_Bill__c);
   		insert obj_invoive;
   		system.debug(obj_invoive);
   		
   		list<Invoice_Statement__c> listInvoice = new list<Invoice_Statement__c>([select id from Invoice_Statement__c where name__c='Bhushan']);
   		Invoice_Statement__c invoiceId = new Invoice_Statement__c();
   		for(Invoice_Statement__c invoice : listInvoice)
   		{
   		invoiceId=invoice;
   		}
   		System.debug(invoiceId.id);
   		
   		list<Line_Item__c> obj_line = new list<Line_Item__c>();
   		for(integer i=1;i<=2;i++)
   		{
   		Line_Item__c obj = new Line_Item__c(Labor__c=100,New_client_Discount__c=100,Price__c=10000,Product_Name__c='Samsung',Service_Fee__c=100,Units__c=2,Invoice_Statement__c=invoiceId.id);
   		obj_line.add(obj);
   		system.debug(obj_line);
   		
   		}
   		
   		LineItemExtension obj =  new LineItemExtension();
   		list<Line_item__c> lstlabour = obj.getListLabor();
   		system.debug(lstlabour); 
   		
   		system.assertEquals();
   		
   		/*Book__c b = new Book__c(Name='Behind the Cloud', Price__c=100);
        System.debug('Price before inserting new book: ' + b.Price__c);
        // Insert book

        insert b;
        // Retrieve the new book
        b = [SELECT Price__c FROM Book__c WHERE Id =:b.Id];
        System.debug('Price after trigger fired: ' + b.Price__c);
        // Test that the trigger correctly updated the price
        System.assertEquals(90, b.Price__c);
		*/
    }

}